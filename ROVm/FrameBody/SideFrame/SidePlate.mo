within ROVm.FrameBody.SideFrame;

model SidePlate
  import SI = Modelica.SIunits;
  UnderwaterRigidBodyLibrary.Parts.BasicBodyShape sidePlate(r_CM = r_CM_SP, r = r_SP, animation = animation, m = m_SP, density = d_plate, mu_d = mu_d_SP, A = A_SP, color = color, k_d = k_d_SP) annotation(Placement(visible = true, transformation(origin = {0, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Mechanics.MultiBody.Interfaces.Frame_a frame_frontU annotation(Placement(visible = true, transformation(origin = {-146, 86}, extent = {{-16, -16}, {16, 16}}, rotation = 0), iconTransformation(origin = {-90, 58.159}, extent = {{-16, -16}, {16, 16}}, rotation = 0)));
  Modelica.Mechanics.MultiBody.Interfaces.Frame_b frame_backU annotation(Placement(visible = true, transformation(origin = {146, 86}, extent = {{-16, -16}, {16, 16}}, rotation = 0), iconTransformation(origin = {90, 56}, extent = {{-16, -16}, {16, 16}}, rotation = 0)));
  Modelica.Mechanics.MultiBody.Interfaces.Frame_a frame_frontL annotation(Placement(visible = true, transformation(origin = {-146, -80}, extent = {{-16, -16}, {16, 16}}, rotation = 0), iconTransformation(origin = {-74, -62.226}, extent = {{-16, -16}, {16, 16}}, rotation = 0)));
  Modelica.Mechanics.MultiBody.Interfaces.Frame_b frame_backL annotation(Placement(visible = true, transformation(origin = {146, -79}, extent = {{-16, -16}, {16, 16}}, rotation = 0), iconTransformation(origin = {84, -61.833}, extent = {{-16, -16}, {16, 16}}, rotation = 0)));
  Modelica.Mechanics.MultiBody.Interfaces.Frame_resolve lumenU annotation(Placement(visible = true, transformation(origin = {-117.337, 105}, extent = {{-16, -16}, {16, 16}}, rotation = 0), iconTransformation(origin = {-79.015, 100}, extent = {{-16, -16}, {16, 16}}, rotation = 0)));
  Modelica.Mechanics.MultiBody.Interfaces.Frame_resolve lumenL if secondLumen annotation(Placement(visible = true, transformation(origin = {120, 106.639}, extent = {{-16, -16}, {16, 16}}, rotation = 0), iconTransformation(origin = {80.808, 101.561}, extent = {{-16, -16}, {16, 16}}, rotation = 0)));
  Modelica.Mechanics.MultiBody.Interfaces.Frame_b frame_propV annotation(Placement(visible = true, transformation(origin = {0, 105}, extent = {{-16, -16}, {16, 16}}, rotation = 0), iconTransformation(origin = {0, 100}, extent = {{-16, -16}, {16, 16}}, rotation = 0)));
  Modelica.Mechanics.MultiBody.Parts.FixedTranslation frontUPosition(r = front_TP_Pos, animation = animationFT) "Position of front Top Piece Connector Frame" annotation(Placement(visible = true, transformation(origin = {-115, 50}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
  Modelica.Mechanics.MultiBody.Parts.FixedTranslation backUPosition(r = back_TP_Pos, animation = animationFT) "Position of backside Top Piece connector" annotation(Placement(visible = true, transformation(origin = {80, 50}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Mechanics.MultiBody.Parts.FixedTranslation propVPosition(r = propVPos, animation = animationFT) "Position of Vertical Propeller connector" annotation(Placement(visible = true, transformation(origin = {20, 105}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
  Modelica.Mechanics.MultiBody.Parts.FixedTranslation frontLPosition(r = front_BP_Pos, animation = animationFT) "Position of frontside connector to Bottom Plate" annotation(Placement(visible = true, transformation(origin = {-100, -80}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
  Modelica.Mechanics.MultiBody.Parts.FixedTranslation backLPosition(r = back_BP_Pos, animation = animationFT) "Position of backside connector to Bottom Plate" annotation(Placement(visible = true, transformation(origin = {115, -80}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Mechanics.MultiBody.Parts.FixedTranslation lumenUPosition(r = lumenUPos, animation = animationFT) "Position of connector to upper lumen" annotation(Placement(visible = true, transformation(origin = {-65, 105}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
  Modelica.Mechanics.MultiBody.Parts.FixedTranslation lumenLPosition(r = lumenLPos, animation = animationFT) if secondLumen "Position of connector to lower lumen" annotation(Placement(visible = true, transformation(origin = {85, 90}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  SI.Position r_0[3](start = {0, 0, 0}, each stateSelect = if enforceStates then StateSelect.always else StateSelect.avoid) "Position vector from origin of world frame to origin of frame_a" annotation(Dialog(tab = "Initialization", showStartAttribute = true));
  SI.Velocity v_0[3](start = {0, 0, 0}, each stateSelect = if enforceStates then StateSelect.always else StateSelect.avoid) "Absolute velocity of frame_a, resolved in world frame (= der(r_0))" annotation(Dialog(tab = "Initialization", showStartAttribute = true));
  SI.Acceleration a_0[3](start = {0, 0, 0}) "Absolute acceleration of frame_a resolved in world frame (= der(v_0))" annotation(Dialog(tab = "Initialization", showStartAttribute = true));
  parameter Boolean animation = true "animate bodies?";
  parameter Boolean animationFT = false "animeate fixed_translations?";
  parameter Boolean secondLumen = true "true = Use of second lumen, position = -lumenUPos";
  parameter SI.Length r_SP[3] = {1, 0, 0} "Total length of Side Plate, from frame_a to frame_b";
  parameter SI.Length r_CM_SP[3] = r_SP / 2 "Length from frame_a to CM of Side Plate";
  parameter SI.Density d_plate = 970 "density of side plate";
  parameter SI.Mass m_SP = 2;
  parameter SI.Area A_SP = 0.5;
  parameter SI.DimensionlessRatio mu_d_SP = 1;
  parameter SI.RotationalDampingConstant k_d_SP = 1;
  parameter SI.Length TP_Pos[3] = {0.4, 0, 0} "Position of front side top piece connection point, from center of mass of side plate";
  parameter SI.Length BP_Pos[3] = {0.15, 0, 0} "Position of back side bottom plate connection point, from center of mass of side plate";
  parameter SI.Length propVPos[3] = {0.5, 0.2, 0} "Position of vertical propeller from frame_a";
  parameter SI.Length lumenUPos[3] = {0, 0.3, 0} "Position of upper (or only) lumen from frame_a";
  input Modelica.Mechanics.MultiBody.Types.Color color = Modelica.Mechanics.MultiBody.Types.Defaults.BodyColor "Color of shape" annotation(Dialog(colorSelector = true, tab = "Animation", group = "if animation = true", enable = animation));
  parameter Boolean enforceStates = false "= true, if absolute variables of body object shall be used as states (StateSelect.always)" annotation(Evaluate = true, Dialog(tab = "Advanced"));
  Modelica.Mechanics.MultiBody.Parts.FixedTranslation lumenHorizontalDis(r = r_SP, animation = animationFT) "Position of connector to upper lumen" annotation(Placement(visible = true, transformation(origin = {-26.717, 62.062}, extent = {{10, -10}, {-10, 10}}, rotation = -90)));
protected
  parameter SI.Length lumenLPos[3] = -lumenUPos if secondLumen;
  parameter SI.Length front_TP_Pos[3] = r_CM_SP + TP_Pos + {0, 0.2, 0};
  parameter SI.Length front_BP_Pos[3] = r_CM_SP + BP_Pos + {0, -0.2, 0};
  parameter SI.Length back_TP_Pos[3] = r_CM_SP - TP_Pos + {0, 0.2, 0};
  parameter SI.Length back_BP_Pos[3] = r_CM_SP - BP_Pos + {0, -0.2, 0};
equation
  r_0 = sidePlate.frame_a.r_0;
  v_0 = der(r_0);
  a_0 = der(v_0);
  connect(frontUPosition.frame_b, frame_frontU) annotation(Line(visible = true, origin = {-139, 62}, points = {{14, -12}, {-7, -12}, {-7, 24}}, color = {95, 95, 95}));
  connect(frontUPosition.frame_a, sidePlate.frame_a) annotation(Line(visible = true, origin = {-35.256, 25}, points = {{-69.744, 25}, {22.244, 25}, {22.244, -25}, {25.256, -25}}, color = {95, 95, 95}));
  connect(frontLPosition.frame_b, frame_frontL) annotation(Line(visible = true, origin = {-128, -80}, points = {{18, 0}, {-18, 0}}, color = {95, 95, 95}));
  connect(frontLPosition.frame_a, sidePlate.frame_a) annotation(Line(visible = true, origin = {-31.506, -40}, points = {{-58.494, -40}, {18.494, -40}, {18.494, 40}, {21.506, 40}}, color = {95, 95, 95}));
  connect(lumenUPosition.frame_b, lumenU) annotation(Line(visible = true, origin = {-96.168, 105}, points = {{21.168, 0}, {-21.169, 0}}, color = {95, 95, 95}));
  connect(propVPosition.frame_b, frame_propV) annotation(Line(visible = true, origin = {6.667, 105}, points = {{3.333, 0}, {3.333, 0}, {-6.667, 0}}, color = {95, 95, 95}));
  connect(propVPosition.frame_a, sidePlate.frame_a) annotation(Line(visible = true, origin = {9.996, 65.667}, points = {{20.004, 39.333}, {23.004, 39.333}, {23.004, 26.333}, {-23.008, 26.333}, {-23.008, -65.667}, {-19.996, -65.667}}, color = {95, 95, 95}));
  connect(sidePlate.frame_a, backUPosition.frame_a) annotation(Line(visible = true, origin = {8.494, 25}, points = {{-18.494, -25}, {-21.506, -25}, {-21.506, 25}, {61.506, 25}}, color = {95, 95, 95}));
  connect(backUPosition.frame_b, frame_backU) annotation(Line(visible = true, origin = {122.5, 68}, points = {{-32.5, -18}, {4.5, -18}, {4.5, 18}, {23.5, 18}}, color = {95, 95, 95}));
  connect(sidePlate.frame_a, backLPosition.frame_a) annotation(Line(visible = true, origin = {17.244, -40}, points = {{-27.244, 40}, {-30.256, 40}, {-30.256, -40}, {87.756, -40}}, color = {95, 95, 95}));
  connect(backLPosition.frame_b, frame_backL) annotation(Line(visible = true, origin = {132.25, -79.5}, points = {{-7.25, -0.5}, {-3.25, -0.5}, {-3.25, 0.5}, {13.75, 0.5}}, color = {95, 95, 95}));
  connect(sidePlate.frame_a, lumenHorizontalDis.frame_a) annotation(Line(visible = true, origin = {-21.145, 17.354}, points = {{11.145, -17.354}, {-5.572, -17.354}, {-5.572, 34.708}}, color = {95, 95, 95}));
  connect(lumenHorizontalDis.frame_b, lumenUPosition.frame_a) annotation(Line(visible = true, origin = {-36.145, 94.021}, points = {{9.428, -21.958}, {9.428, 10.979}, {-18.855, 10.979}}, color = {95, 95, 95}));
  connect(lumenHorizontalDis.frame_b, lumenLPosition.frame_a) annotation(Line(visible = true, origin = {7.188, 84.021}, points = {{-33.906, -11.958}, {-33.906, 5.979}, {67.812, 5.979}}, color = {95, 95, 95}));
  connect(lumenLPosition.frame_b, lumenL) annotation(Line(visible = true, origin = {104.25, 98.32}, points = {{-9.25, -8.32}, {-3.25, -8.32}, {-3.25, 8.319}, {15.75, 8.319}}, color = {95, 95, 95}));
  annotation(Icon(coordinateSystem(extent = {{-100, -100}, {100, 100}}, preserveAspectRatio = true, initialScale = 0.1, grid = {10, 10}), graphics = {Polygon(visible = true, origin = {1.42, 32.342}, fillColor = {0, 0, 255}, fillPattern = FillPattern.Horizontal, points = {{-94.553, 39.441}, {-76.147, -109.278}, {85.455, -109.278}, {91.713, 39.441}, {77.844, 49.748}, {-2.156, 47.908}, {-82.156, 42.018}}), Ellipse(visible = true, origin = {-78.13, 100}, fillPattern = FillPattern.Solid, extent = {{-11.87, -20}, {11.87, 20}}), Ellipse(visible = true, origin = {80, 102.675}, fillPattern = FillPattern.Solid, extent = {{-11.87, -20}, {11.87, 20}})}), Diagram(coordinateSystem(extent = {{-148.5, -105}, {148.5, 105}}, preserveAspectRatio = true, initialScale = 0.1, grid = {5, 5})));
end SidePlate;
