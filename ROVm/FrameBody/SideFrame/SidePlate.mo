within ROVm.FrameBody.SideFrame;

model SidePlate
  import SI = Modelica.SIunits;
  RBodyInFluid.Parts.BasicBodyShape sidePlate(r_CM = r_CM_SP, r = r_SP, animation = animation, m = m_SP, density = d_plate, c_d = c_d_SP, A = A_SP) annotation(Placement(visible = true, transformation(origin = {0, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Mechanics.MultiBody.Interfaces.Frame_a frame_frontU annotation(Placement(visible = true, transformation(origin = {-146, 86}, extent = {{-16, -16}, {16, 16}}, rotation = 0), iconTransformation(origin = {-90, 58.159}, extent = {{-16, -16}, {16, 16}}, rotation = 0)));
  Modelica.Mechanics.MultiBody.Interfaces.Frame_b frame_backU annotation(Placement(visible = true, transformation(origin = {146, 86}, extent = {{-16, -16}, {16, 16}}, rotation = 0), iconTransformation(origin = {90, 56}, extent = {{-16, -16}, {16, 16}}, rotation = 0)));
  Modelica.Mechanics.MultiBody.Interfaces.Frame_a frame_frontL annotation(Placement(visible = true, transformation(origin = {-146, -80}, extent = {{-16, -16}, {16, 16}}, rotation = 0), iconTransformation(origin = {-74, -62.226}, extent = {{-16, -16}, {16, 16}}, rotation = 0)));
  Modelica.Mechanics.MultiBody.Interfaces.Frame_b frame_backL annotation(Placement(visible = true, transformation(origin = {146, -79}, extent = {{-16, -16}, {16, 16}}, rotation = 0), iconTransformation(origin = {84, -61.833}, extent = {{-16, -16}, {16, 16}}, rotation = 0)));
  Modelica.Mechanics.MultiBody.Interfaces.Frame_resolve lumenU annotation(Placement(visible = true, transformation(origin = {-117.337, 105}, extent = {{-16, -16}, {16, 16}}, rotation = 0), iconTransformation(origin = {-79.015, 100}, extent = {{-16, -16}, {16, 16}}, rotation = 0)));
  Modelica.Mechanics.MultiBody.Interfaces.Frame_resolve lumenL if secondLumen annotation(Placement(visible = true, transformation(origin = {120, 106.639}, extent = {{-16, -16}, {16, 16}}, rotation = 0), iconTransformation(origin = {80.808, 101.561}, extent = {{-16, -16}, {16, 16}}, rotation = 0)));
  Modelica.Mechanics.MultiBody.Interfaces.Frame_b frame_propV annotation(Placement(visible = true, transformation(origin = {0, 105}, extent = {{-16, -16}, {16, 16}}, rotation = 0), iconTransformation(origin = {0, 100}, extent = {{-16, -16}, {16, 16}}, rotation = 0)));
  Modelica.Mechanics.MultiBody.Parts.FixedTranslation frontUPosition(r = TP_Pos, animation = animationFT) "Position of front Top Piece Connector Frame" annotation(Placement(visible = true, transformation(origin = {-115, 50}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Mechanics.MultiBody.Parts.FixedTranslation backUPosition(r = back_TP_Pos, animation = animationFT) "Position of backside Top Piece connector" annotation(Placement(visible = true, transformation(origin = {80, 50}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
  Modelica.Mechanics.MultiBody.Parts.FixedTranslation propVPosition(r = propVPos, animation = animationFT) "Position of Vertical Propeller connector" annotation(Placement(visible = true, transformation(origin = {22.126, 105}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Mechanics.MultiBody.Parts.FixedTranslation frontLPosition(r = BP_Pos, animation = animationFT) "Position of frontside connector to Bottom Plate" annotation(Placement(visible = true, transformation(origin = {-100, -80}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Mechanics.MultiBody.Parts.FixedTranslation backLPosition(r = back_BP_Pos, animation = animationFT) "Position of backside connector to Bottom Plate" annotation(Placement(visible = true, transformation(origin = {118.492, -80}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
  Modelica.Mechanics.MultiBody.Parts.FixedTranslation lumenUPosition(r = lumenUPos, animation = animationFT) "Position of connector to upper lumen" annotation(Placement(visible = true, transformation(origin = {-97.203, 105}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Mechanics.MultiBody.Parts.FixedTranslation lumenLPosition(r = lumenLPos, animation = animationFT) if secondLumen "Position of connector to lower lumen" annotation(Placement(visible = true, transformation(origin = {92.379, 105}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
  SI.Position r_0[3](start = {0, 0, 0}, each stateSelect = if enforceStates then StateSelect.always else StateSelect.avoid) "Position vector from origin of world frame to origin of frame_a" annotation(Dialog(tab = "Initialization", showStartAttribute = true));
  SI.Velocity v_0[3](start = {0, 0, 0}, each stateSelect = if enforceStates then StateSelect.always else StateSelect.avoid) "Absolute velocity of frame_a, resolved in world frame (= der(r_0))" annotation(Dialog(tab = "Initialization", showStartAttribute = true));
  SI.Acceleration a_0[3](start = {0, 0, 0}) "Absolute acceleration of frame_a resolved in world frame (= der(v_0))" annotation(Dialog(tab = "Initialization", showStartAttribute = true));
  parameter Boolean animation = true "animate bodies?";
  parameter Boolean animationFT = false "animeate fixed_translations?";
  parameter Boolean secondLumen = true "true = Use of second lumen, position = -lumenUPos";
  parameter SI.Length r_SP[3] = {1, 0, 0} "Total length of Side Plate, from frame_a to frame_b";
  parameter SI.Length r_CM_SP[3] = r_SP / 2 "Length from frame_a to CM of Side Plate";
  parameter SI.Density d_plate = 2700 "density of side plate";
  parameter SI.Mass m_SP = 2;
  parameter SI.Area A_SP = 0.5;
  parameter SI.DimensionlessRatio c_d_SP = 1;
  parameter SI.Length TP_Pos[3] = {0.25, 0, 0} "Position of front side top piece connection point, from center of mass of side plate";
  parameter SI.Length BP_Pos[3] = {0.4, 0, 0} "Position of back side bottom plate connection point, from center of mass of side plate";
  parameter SI.Length propVPos[3] = {0.5, 0.3, 0} "Position of vertical propeller from frame_a";
  parameter SI.Length lumenUPos[3] = {0, 0.5, 0} "Position of upper (or only) lumen from frame_a";
  parameter Boolean enforceStates = false "= true, if absolute variables of body object shall be used as states (StateSelect.always)" annotation(Evaluate = true, Dialog(tab = "Advanced"));
protected
  parameter SI.Length lumenLPos[3] = -lumenUPos if secondLumen;
  parameter SI.Length front_TP_Pos[3] = r_CM_SP + TP_Pos;
  parameter SI.Length front_BP_Pos[3] = r_CM_SP + BP_Pos;
  parameter SI.Length back_TP_Pos[3] = r_CM_SP - TP_Pos;
  parameter SI.Length back_BP_Pos[3] = r_CM_SP - BP_Pos;
equation
  r_0 = sidePlate.frame_a.r_0;
  v_0 = der(r_0);
  a_0 = der(v_0);
  connect(frame_frontU, frontUPosition.frame_a) annotation(Line(visible = true, origin = {-139, 62}, points = {{-7, 24}, {-7, -12}, {14, -12}}, color = {95, 95, 95}));
  connect(lumenU, lumenUPosition.frame_a) annotation(Line(visible = true, origin = {-112.27, 105}, points = {{-5.067, 0}, {5.067, 0}}, color = {95, 95, 95}));
  connect(frame_propV, propVPosition.frame_a) annotation(Line(visible = true, origin = {6.063, 105}, points = {{-6.063, 0}, {6.063, 0}}, color = {95, 95, 95}));
  connect(lumenL, lumenLPosition.frame_a) annotation(Line(visible = true, origin = {114.126, 105.546}, points = {{5.874, 1.093}, {5.874, -0.546}, {-11.747, -0.546}}, color = {95, 95, 95}));
  connect(frame_backU, backUPosition.frame_a) annotation(Line(visible = true, origin = {105.5, 68}, points = {{40.5, 18}, {-12.5, 18}, {-12.5, -18}, {-15.5, -18}}, color = {95, 95, 95}));
  connect(frame_backL, backLPosition.frame_a) annotation(Line(visible = true, origin = {140.164, -79.667}, points = {{5.836, 0.667}, {5.836, -0.333}, {-11.672, -0.333}}, color = {95, 95, 95}));
  connect(frame_frontL, frontLPosition.frame_a) annotation(Line(visible = true, origin = {-128, -80}, points = {{-18, 0}, {18, 0}}, color = {95, 95, 95}));
  connect(frontUPosition.frame_b, sidePlate.frame_a) annotation(Line(visible = true, origin = {-35.256, 25}, points = {{-69.744, 25}, {22.244, 25}, {22.244, -25}, {25.256, -25}}, color = {95, 95, 95}));
  connect(backUPosition.frame_b, sidePlate.frame_b) annotation(Line(visible = true, origin = {28.444, 25}, points = {{41.556, 25}, {-13.444, 25}, {-13.444, -25}, {-18.444, -25}}, color = {95, 95, 95}));
  connect(frontLPosition.frame_b, sidePlate.frame_a) annotation(Line(visible = true, origin = {-31.506, -40}, points = {{-58.494, -40}, {18.494, -40}, {18.494, 40}, {21.506, 40}}, color = {95, 95, 95}));
  connect(backLPosition.frame_b, sidePlate.frame_b) annotation(Line(visible = true, origin = {38.067, -40}, points = {{70.425, -40}, {-23.067, -40}, {-23.067, 40}, {-28.067, 40}}, color = {95, 95, 95}));
  connect(lumenUPosition.frame_b, sidePlate.frame_a) annotation(Line(visible = true, origin = {-30.807, 52.5}, points = {{-56.396, 52.5}, {17.794, 52.5}, {17.794, -52.5}, {20.807, -52.5}}, color = {95, 95, 95}));
  connect(propVPosition.frame_b, sidePlate.frame_a) annotation(Line(visible = true, origin = {11.096, 65.667}, points = {{21.03, 39.333}, {24.142, 39.333}, {24.142, 26.333}, {-24.109, 26.333}, {-24.109, -65.667}, {-21.096, -65.667}}, color = {95, 95, 95}));
  connect(lumenLPosition.frame_b, sidePlate.frame_a) annotation(Line(visible = true, origin = {21.041, 53.333}, points = {{61.339, 51.667}, {18.959, 51.667}, {18.959, 1.667}, {-34.109, 1.667}, {-34.109, -53.333}, {-31.041, -53.333}}, color = {95, 95, 95}));
  annotation(Icon(coordinateSystem(extent = {{-100, -100}, {100, 100}}, preserveAspectRatio = true, initialScale = 0.1, grid = {10, 10}), graphics = {Polygon(visible = true, origin = {1.42, 32.342}, fillColor = {0, 0, 255}, fillPattern = FillPattern.Horizontal, points = {{-94.553, 39.441}, {-76.147, -109.278}, {85.455, -109.278}, {91.713, 39.441}, {77.844, 49.748}, {-2.156, 47.908}, {-82.156, 42.018}}), Ellipse(visible = true, origin = {-78.13, 100}, fillPattern = FillPattern.Solid, extent = {{-11.87, -20}, {11.87, 20}}), Ellipse(visible = true, origin = {80, 102.675}, fillPattern = FillPattern.Solid, extent = {{-11.87, -20}, {11.87, 20}})}), Diagram(coordinateSystem(extent = {{-148.5, -105}, {148.5, 105}}, preserveAspectRatio = true, initialScale = 0.1, grid = {5, 5})));
end SidePlate;
