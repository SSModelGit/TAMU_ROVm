within RBodyInFluid.Parts;

model BasicPropMount
  import Modelica.SIunits;
  Modelica.Mechanics.MultiBody.Parts.Mounting1D mounting1D(n = n, phi0 = 0) annotation(Placement(visible = true, transformation(origin = {0, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Mechanics.MultiBody.Interfaces.Frame_a frame_a annotation(Placement(visible = true, transformation(origin = {0, -105}, extent = {{-16, -16}, {16, 16}}, rotation = -90), iconTransformation(origin = {0, -98.274}, extent = {{-16, -16}, {16, 16}}, rotation = 0)));
  Modelica.Mechanics.Rotational.Interfaces.Flange_b flange_b annotation(Placement(visible = true, transformation(origin = {148.397, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0), iconTransformation(origin = {99.93, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  parameter SI.Length k(start = 1) "Characteristic length/coefficient of the propeller, to translate torque to force" annotation(Dialog(tab = "Mount Propogation"));
  parameter Modelica.Mechanics.MultiBody.Types.Axis n = {1, 0, 0} "Axis of rotation = axis of support torque (resolved in frame_a)" annotation(Evaluate = true);
equation
  connect(flange_b, mounting1D.flange_b) annotation(Line(visible = true, origin = {70.842, 0.379}, points = {{77.555, -0.379}, {49.158, -0.379}, {49.158, 2.727}, {51.326, 2.727}, {51.326, -3.139}, {44.158, -3.139}, {44.158, 2.037}, {47.185, 2.037}, {47.185, -0.379}, {36.832, -0.379}, {36.832, 2.382}, {39.158, 2.382}, {39.158, -2.794}, {31.31, -2.794}, {31.31, 2.382}, {34.158, 2.382}, {34.158, -0.379}, {-53.242, -0.379}, {-53.242, 2.727}, {-50.842, 2.727}, {-50.842, -3.83}, {-55.842, -3.83}, {-55.842, 6.869}, {-47.72, 6.869}, {-47.72, -7.281}, {-57.728, -7.281}, {-57.728, 9.621}, {-45.842, 9.621}, {-45.842, -10.379}, {-60.842, -10.379}, {-60.842, -0.379}}, color = {64, 64, 64}, smooth = Smooth.Bezier));
  // force.force = mounting1D.housing.t / k;
  connect(mounting1D.frame_a, frame_a) annotation(Line(visible = true, origin = {0, -57.5}, points = {{0, 47.5}, {0, -47.5}}, color = {95, 95, 95}));
  annotation(Icon(coordinateSystem(extent = {{-100, -100}, {100, 100}}, preserveAspectRatio = true, initialScale = 0.1, grid = {10, 10}), graphics = {Rectangle(visible = true, fillColor = {0, 0, 100}, fillPattern = FillPattern.Solid, extent = {{-100, -100}, {100, 100}}), Polygon(visible = true, origin = {50, 0.721}, fillPattern = FillPattern.Solid, points = {{50, -0.721}, {-0, 12.163}, {-50, -0.721}, {-0, -10.721}}), Polygon(visible = true, origin = {-45, -45}, fillPattern = FillPattern.Solid, points = {{45, 45}, {15, -5}, {-55, -55}, {-5, 15}}), Polygon(visible = true, origin = {-45, 45}, fillPattern = FillPattern.Solid, points = {{45, -45}, {15, 5}, {-55, 55}, {-5, -15}}), Text(visible = true, textColor = {255, 255, 255}, extent = {{-150, 70}, {150, 110}}, textString = "%name", fontName = "Liberation Sans"), Text(visible = true, textColor = {255, 255, 255}, extent = {{-150, -100}, {150, -70}}, textString = "n=%n", fontName = "Liberation Sans"), Text(visible = true, origin = {-10, 0}, textColor = {255, 255, 255}, extent = {{-50, -27}, {55, 24}}, textString = "%prop_R", fontName = "Liberation Sans"), Line(visible = true, origin = {9, -65}, rotation = -630, points = {{66, 80}, {66, -70}}, color = {255, 255, 255}, pattern = LinePattern.Dash, arrow = {Arrow.None, Arrow.Filled}, arrowSize = 30)}), Diagram(coordinateSystem(extent = {{-148.5, -105}, {148.5, 105}}, preserveAspectRatio = true, initialScale = 0.1, grid = {5, 5})));
end BasicPropMount;
